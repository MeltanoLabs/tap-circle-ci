[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core==1.9",
]

[tool.poetry]
name = "meltano-tap-circle-ci"
version = "0.1.1"
description = "`tap-circle-ci` is a Singer tap for CircleCI, built with the Meltano SDK for Singer Taps."
authors = [
  "Fran Lozano <fjlozanos@gmail.com>",
]
maintainers = [
  "Fran Lozano <fjlozanos@gmail.com>",
  "Meltano Team <hello@meltano.com>",
]
keywords = [
  "ELT",
  "Meltano",
  "CircleCI",
]
license = "Apache-2.0"
packages = [
    { include = "tap_circle_ci" },
]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.8"
requests = "~=2.31.0"
singer-sdk = "~=0.34.0"
typing-extensions = {version = "~=4.9.0", python = "<3.12"}

[tool.poetry.dev-dependencies]
mypy = ">=1.7.1"
pytest = ">=8.0.0"
types-requests = "~=2.31.0.6"

[tool.poetry.scripts]
# CLI declaration
tap-circle-ci = 'tap_circle_ci.tap:TapCircleCI.cli'

[tool.ruff]
line-length = 88
src = ["tap_pulumi_cloud", "tests"]
target-version = "py38"

[tool.ruff.format]
# Enable preview style formatting.
preview = true

[tool.ruff.lint]
explicit-preview-rules = false
ignore = [
  "ANN101", # missing-type-self
  "DJ",     # flake8-django
  "CPY",    # missing-copyright-notice
  "COM812",  # missing-trailing-comma
  "ISC001",  # single-line-implicit-string-concatenatio
]
preview = true
select = ["ALL"]
unfixable = [
  "ERA001",  # commented-out-code
]

[tool.ruff.lint.per-file-ignores]
"noxfile.py" = ["ANN"]
"tests/*" = [
  "ANN201",  # missing-return-type-public-function
  "S101",    # assert
  "SLF001",  # private-member-access
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.isort]
known-first-party = ["tap_circle_ci"]

[tool.ruff.lint.pydocstyle]
convention = "google"
